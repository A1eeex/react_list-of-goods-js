{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","_useState","useState","_useState2","_slicedToArray","isSorting","setSortBy","_useState3","_useState4","isReversed","setIsReversed","goodsList","goods","sortField","reverse","preparedGoods","_toConsumableArray","sort","good1","good2","localeCompare","length","getPreparedGoods","showResetBtn","_jsxs","className","children","_jsx","type","concat","onClick","prevVal","map","good","idUuid","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"yOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,oBACnBC,EAAiB,iBA6BhB,IAAMC,EAAM,WACjB,IAAAC,EAA+BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAApCI,EAASF,EAAA,GAAEG,EAASH,EAAA,GAC3BI,EAAoCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE1BG,EA/BR,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAaC,YAAOJ,GAe1B,OAbIC,GACFE,EAAcE,MAAK,SAACC,EAAOC,GACzB,OAAQN,GACN,KAAKf,EACH,OAAOoB,EAAME,cAAcD,GAC7B,KAAKpB,EACH,OAAOmB,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKXP,EACKC,EAAcD,UAGhBC,EAOWO,CAChBzB,EACAQ,EACAI,GAEIc,EAA8B,KAAdlB,GAAqBI,EAO3C,OACEe,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAS,kBAAAI,OAAoBxB,IAAcP,GAAoB,WAAU,KACzEgC,QAAS,kBAAMxB,EAAUR,IAAkB4B,SAC5C,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAS,qBAAAI,OAAuBxB,IAAcN,GAAkB,YAChE+B,QAAS,kBAAMxB,EAAUP,IAAgB2B,SAC1C,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAS,qBAAAI,QAAwBpB,GAAc,YAC/CqB,QAAS,kBAAMpB,GAAc,SAAAqB,GAAO,OAAKA,MAASL,SACnD,YAIAH,GACCI,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QApCe,WACvBxB,EAAU,IACVI,GAAc,IAkCoBgB,SAC3B,aAMLC,cAAA,MAAAD,SACGf,EAAUqB,KAAI,SAACC,GACd,IAAMC,EAASC,cAEf,OACER,cAAA,MAAiB,UAAQ,OAAMD,SAC5BO,GADMC,YCxGrBE,IAASC,OACPV,cAAC3B,EAAG,IACJsC,SAASC,eAAe,W","file":"static/js/main.32390d89.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'SORT_BY_ALPHABET ';\nconst SORT_BY_LENGTH = 'SORT_BY_LENGTH';\n\nfunction getPreparedGoods(\n  goods,\n  sortField,\n  reverse,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [isSorting, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goodsList = getPreparedGoods(\n    goodsFromServer,\n    isSorting,\n    isReversed,\n  );\n  const showResetBtn = (isSorting !== '') || isReversed;\n\n  const handleClickReset = () => {\n    setSortBy('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${isSorting !== SORT_BY_ALPHABET && 'is-light'} `}\n          onClick={() => setSortBy(SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${isSorting !== SORT_BY_LENGTH && 'is-light'}`}\n          onClick={() => setSortBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed(prevVal => !prevVal)}\n        >\n          Reverse\n        </button>\n\n        {showResetBtn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleClickReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsList.map((good) => {\n          const idUuid = uuidv4();\n\n          return (\n            <li key={idUuid} data-cy=\"Good\">\n              {good}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}