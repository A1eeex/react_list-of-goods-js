{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FILD_BY_ALPHABET","SORT_BY_LENGTH","App","goodsFromServerObjekt","map","item","index","nameGood","id","useState","sortBtnFild","setSortBtnFild","reverseList","setReversedList","goodsList","goods","sortFiled","reverse","prepearedGoods","sort","a","b","localeCompare","length","getPrepeadGoods","showResetBtn","className","type","onClick","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,wBACxBC,EAAiB,iBAyBhB,IAAMC,EAAM,WACjB,IAAMC,EAAwBJ,EAC3BK,KAAI,SAACC,EAAMC,GAAP,MAAkB,CAAEC,SAAUF,EAAMG,GAAIF,EAAQ,MAEvD,EAAsCG,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAuCF,oBAAS,GAAhD,mBAAOG,EAAP,KAAoBC,EAApB,KAEMC,EA9BR,SAAyBC,EAAOC,EAAWC,GACzC,IAAMC,EAAc,YAAOH,GAe3B,OAbIC,GACFE,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQL,GACN,KAAKhB,EACH,OAAOoB,EAAEb,SAASe,cAAcD,EAAEd,UACpC,KAAKN,EACH,OAAOmB,EAAEb,SAASgB,OAASF,EAAEd,SAASgB,OACxC,QACE,OAAO,MAKXN,EACKC,EAAeD,UAGjBC,EAUWM,CAChBrB,EACAO,EACAE,GAGIa,EAAgC,KAAhBf,GAAuBE,EAE7C,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBhB,IAAgBV,GAAyB,WAA7D,KACT4B,QAAS,kBAAMjB,EAAeX,IAHhC,iCAQA,wBACE2B,KAAK,SACLD,UAAS,4BAAuBhB,IAAgBT,GAAkB,YAClE2B,QAAS,kBAAMjB,EAAeV,IAHhC,4BAQA,wBACE0B,KAAK,SACLD,UAAS,6BAAwBd,GAAe,YAChDgB,QAAS,kBAAMf,GAAiBD,IAHlC,qBAQCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAe,IACfE,GAAgB,IALpB,sBAaJ,6BACGC,EAAUV,KAAI,SAACyB,GACd,IAAQtB,EAAiBsB,EAAjBtB,SAAUC,EAAOqB,EAAPrB,GAElB,OACE,oBAAa,UAAQ,OAArB,SAA6BD,GAApBC,YCrGrBsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e685122.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FILD_BY_ALPHABET = 'SORT_FILD_BY_ALPHABET';\nconst SORT_BY_LENGTH = 'SORT_BY_LENGTH';\n\nfunction getPrepeadGoods(goods, sortFiled, reverse) {\n  const prepearedGoods = [...goods];\n\n  if (sortFiled) {\n    prepearedGoods.sort((a, b) => {\n      switch (sortFiled) {\n        case SORT_FILD_BY_ALPHABET:\n          return a.nameGood.localeCompare(b.nameGood);\n        case SORT_BY_LENGTH:\n          return a.nameGood.length - b.nameGood.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const goodsFromServerObjekt = goodsFromServer\n    .map((item, index) => ({ nameGood: item, id: index + 1 }));\n\n  const [sortBtnFild, setSortBtnFild] = useState('');\n  const [reverseList, setReversedList] = useState(false);\n\n  const goodsList = getPrepeadGoods(\n    goodsFromServerObjekt,\n    sortBtnFild,\n    reverseList,\n  );\n\n  const showResetBtn = (sortBtnFild !== '') || reverseList;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortBtnFild !== SORT_FILD_BY_ALPHABET && 'is-light'} `}\n          onClick={() => setSortBtnFild(SORT_FILD_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortBtnFild !== SORT_BY_LENGTH && 'is-light'}`}\n          onClick={() => setSortBtnFild(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reverseList && 'is-light'}`}\n          onClick={() => setReversedList(!reverseList)}\n        >\n          Reverse\n        </button>\n\n        {showResetBtn && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortBtnFild('');\n              setReversedList(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsList.map((good) => {\n          const { nameGood, id } = good;\n\n          return (\n            <li key={id} data-cy=\"Good\">{nameGood}</li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}